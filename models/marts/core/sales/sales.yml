version: 2

models:
  
  - name: agg_hourly_drink_sales
    description: >
      Hourly-level aggregate of bar sales metrics including revenue, volume, category diversity,
      and peak hour indicators.
    config:
      tags: ['sales', 'hourly', 'drink']
    columns:
      - name: order_hour_dt
        description: "The timestamp truncated to the hour (used for time-based grouping)."
        tests: [not_null, unique]

      - name: order_date
        description: "Date of the orders in this hourly window."
        tests: [not_null]

      - name: hour_of_day
        description: "Hour of the day (0–23)."
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 23

      - name: total_drink_items_ordered_per_hour
        description: "Total number of drink items ordered during the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: total_drink_revenue_per_hour
        description: "Total revenue from drink ordered during the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_revenue_per_drink_item_per_hour
        description: "Average revenue per drink item sold."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_drink_revenue_per_hour"

      - name: top_drink_category_name_per_hour
        description: "Top-selling drink category for the hour."
        tests:
          - accepted_values:
              values: ['Beers & Cider', 'Lo & No Alc', 'Port & Sherry', 'Ultimate Steakhouse Cocktails',
                      'Time & A Place', 'Rarities', 'The Sacred Six', 'Red Wines', 'Champagne & Sparkling',
                      'Rose Wines', 'Dessert Wines', 'White Wines', 'Magnums', 'Bordeaux', 'Burgundy']

      - name: top_drink_category_revenue_per_hour
        description: "Revenue generated by the top-selling drink category."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_drink_revenue_per_hour"

      - name: pct_top_drink_cat_of_drink_revenue_per_hour
        description: "Percentage of drink revenue from the top drink category."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: distinct_drink_tables_per_hour
        description: "Number of unique tables that placed drink orders during the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= 50"
      
      - name: open_table_ids_per_hour
        description: "Comma-separated list of all distinct table numbers (from food and drink orders) for the hour."

      - name: total_drink_orders_per_hour
        description: "Total number of distinct drink orders placed during the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_revenue_per_drink_order_per_hour
        description: "Average revenue per drink order placed during the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_drink_revenue_per_hour"

      - name: avg_items_per_drink_order_per_hour
        description: "Average number of drink items per order."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 1"
          - dbt_utils.expression_is_true:
              expression: "<= total_drink_items_ordered_per_hour"

      - name: unique_drink_items_ordered_per_hour
        description: "Number of unique drink items sold during the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: drink_category_diversity_per_hour
        description: "Number of distinct drink categories sold during the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: is_bar_peak_hour
        description: "True if this hour is one of the top 2 hours by drink item volume for the day."
        tests:
          - accepted_values:
              values: [true, false]
              quote: false

      - name: avg_drink_items_per_head_per_hour
        description: "Average number of drink items per customer (using mains from food sales as customer proxy)."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_drink_items_ordered_per_hour"

      - name: avg_drink_revenue_per_head_per_hour
        description: "Average drink revenue per customer (using mains from food sales as customer proxy)."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_drink_revenue_per_hour"

      - name: is_weekend
        description: "True if the hour falls on a weekend (Friday, Saturday, or Sunday)."
        tests:
          - accepted_values:
              values: [true, false]
              quote: false

  - name: agg_hourly_food_sales
    description: >
      Hourly-level aggregate of kitchen sales metrics including revenue, volume, category performance,
      and customer-level averages using mains ordered as a proxy.
    config:
      tags: ['sales', 'hourly', 'food']
    columns:
      - name: order_hour_dt
        description: "The timestamp truncated to the hour (used for time-based grouping)."
        tests: [not_null, unique]

      - name: order_date
        description: "Date of the orders in this hourly window."
        tests: [not_null]

      - name: hour_of_day
        description: "Hour of the day (0–23)."
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 23

      - name: total_food_items_ordered_per_hour
        description: "Total number of food items ordered during the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: total_food_revenue_per_hour
        description: "Total revenue from food ordered during the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_revenue_per_food_item_per_hour
        description: "Average revenue per food item ordered."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_food_revenue_per_hour"

      - name: top_food_category_name_per_hour
        description: "Top-selling food category during the hour."
        tests:
          - accepted_values:
              values: ['Mains', 'Large Cuts', 'Steaks', 'Cheese', 'Sides', 'Sauces', 'Puddings',
                      'Ice-Cream & Sorbet', 'Extras', 'Chocolates', 'Starters']

      - name: top_food_category_revenue_per_hour
        description: "Revenue generated by the top-selling food category."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_food_revenue_per_hour"

      - name: pct_top_food_cat_of_food_revenue_per_hour
        description: "Percentage of food revenue from the top food category."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: distinct_food_tables_per_hour
        description: "Number of unique tables that placed food orders during the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= 50"

      - name: open_table_ids_per_hour
        description: "Comma-separated list of all distinct table numbers (from food and drink orders) for the hour."

      - name: total_mains_ordered_per_hour
        description: "Count of mains ordered, used as a proxy for customer count."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_food_revenue_per_head_per_hour
        description: "Average food spend per main ordered."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_food_items_per_head_per_hour
        description: "Average number of food items per main ordered."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: total_food_orders_per_hour
        description: "Number of unique food orders placed during the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_revenue_per_food_order_per_hour
        description: "Average food revenue per order."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_food_revenue_per_hour"

      - name: avg_items_per_food_order_per_hour
        description: "Average number of food items per order."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 1"
          - dbt_utils.expression_is_true:
              expression: "<= total_food_items_ordered_per_hour"

      - name: unique_food_items_ordered_per_hour
        description: "Number of distinct food items sold during the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: food_category_diversity_per_hour
        description: "Number of unique food categories sold during the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 1"

      - name: is_weekend
        description: "Flag indicating if the hour falls on a weekend (Fri–Sun)."
        tests:
          - accepted_values:
              values: [true, false]
              quote: false

      - name: is_kitchen_peak_hour
        description: "True if the hour was among the top 2 kitchen hours by volume for the day."
        tests:
          - accepted_values:
              values: [true, false]
              quote: false

  - name: agg_hourly_total_sales
    description: >
      Hourly aggregate combining food and drink metrics, including total revenue, item volume,
      top category, peak hour indicators, and spend per customer.
    config:
      tags: ['sales', 'hourly', 'kpis']
    columns:
      - name: order_hour_dt
        description: "The timestamp truncated to the hour."
        tests: [not_null, unique]

      - name: order_date
        description: "Date of the sales in this hourly window."
        tests: [not_null]

      - name: hour_of_day
        description: "Hour of the day (0–23)."
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 23

      - name: total_items_ordered_per_hour
        description: "Total number of items (food + drink) sold during the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: total_revenue_per_hour
        description: "Total revenue from food and drink during the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_revenue_per_item_per_hour
        description: "Average revenue per item (food or drink) sold."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_revenue_per_hour"

      - name: pct_food_revenue_per_hour
        description: "Percentage of total hourly revenue from food."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: pct_drink_revenue_per_hour
        description: "Percentage of total hourly revenue from drink."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: top_category_name_per_hour
        description: "Top-selling category by revenue (from either food or drink)."

      - name: top_category_revenue_per_hour
        description: "Revenue generated by the top-selling category."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_revenue_per_hour"

      - name: pct_top_cat_of_total_revenue_per_hour
        description: "Percentage of total hourly revenue generated by the top-selling category."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: distinct_tables_per_hour
        description: "Number of unique tables that placed orders during the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= 50"
      
      - name: open_table_ids_per_hour
        description: "Comma-separated list of all distinct table numbers (from food and drink orders) for the hour."

      - name: total_new_customers_per_hour
        description: "Estimated number of customers (based on total mains ordered)."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_revenue_per_head_per_hour
        description: "Average revenue per customer for the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_items_ordered_per_head_per_hour
        description: "Average number of items ordered per customer for the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: total_orders_per_hour
        description: "Total number of orders (food + drink) placed during the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_revenue_per_order_per_hour
        description: "Average revenue per order per hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_revenue_per_hour"

      - name: avg_items_per_order_per_hour
        description: "Average number of items per order per hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 1"
          - dbt_utils.expression_is_true:
              expression: "<= total_items_ordered_per_hour"

      - name: unique_items_ordered_per_hour
        description: "Total number of unique food and drink items sold during the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: category_diversity_per_hour
        description: "Number of unique categories (food + drink) sold during the hour."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 1"

      - name: is_weekend
        description: "Flag indicating if the hour falls on a weekend (Fri–Sun)."
        tests:
          - accepted_values:
              values: [true, false]
              quote: false

      - name: is_peak_hour
        description: "True if either food and drink were in peak performance for the hour."
        tests:
          - accepted_values:
              values: [true, false]
              quote: false



  - name: agg_daily_food_sales
    description: >
      Daily summary of food (kitchen) sales aggregated from hourly metrics, including total revenue,
      customer estimates, category performance, and daily averages.
    config:
      tags: ['sales', 'daily', 'food', 'agg']
    columns:
      - name: order_date
        description: "Date of the sales aggregation."
        tests:
          - not_null
          - unique

      - name: total_food_items_sold_all_day
        description: "Total number of food items sold across all hours of the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: total_daily_food_revenue
        description: "Total revenue generated from food (kitchen) over the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_daily_revenue_per_food_item
        description: "Average revenue per food item sold throughout the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: food_category_diversity_all_day
        description: "Total number of unique food categories sold during the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: top_daily_food_category_name
        description: "Top-selling food category for the entire day."
        tests:
          - accepted_values:
              values: ['Mains', 'Large Cuts', 'Steaks', 'Cheese', 'Sides', 'Sauces', 'Puddings',
                      'Ice-Cream & Sorbet', 'Extras', 'Chocolates', 'Starters']

      - name: top_daily_food_category_revenue
        description: "Revenue generated by the top-selling food category."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_daily_food_revenue"

      - name: pct_top_food_cat_from_daily_food_revenue
        description: "Share of food revenue from the top category."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: distinct_food_tables_all_day
        description: "Number of unique tables that placed food orders across the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: total_food_orders_all_day
        description: "Total number of food orders placed throughout the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_revenue_per_food_order_all_day
        description: "Average revenue per food order placed during the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_daily_food_revenue"

      - name: avg_items_per_food_order_all_day
        description: "Average number of food items per order placed during the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 1"
          - dbt_utils.expression_is_true:
              expression: "<= total_food_items_sold_all_day"

      - name: total_customers_all_day
        description: "Estimated number of food customers (based on mains ordered)."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_food_revenue_per_head_all_day
        description: "Average food revenue per customer over the entire day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_daily_food_revenue"

      - name: avg_food_items_per_head_all_day
        description: "Average number of food items per customer for the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_food_items_sold_all_day"

      - name: unique_food_items_ordered_all_day
        description: "Total number of unique food items ordered across the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: kitchen_peak_hours
        description: "Comma-separated list of peak kitchen sales hours based on item volume."
        tests: []

      - name: is_weekend
        description: "True if the order date is a Friday, Saturday, or Sunday."
        tests:
          - accepted_values:
              values: [true, false]
              quote: false

  - name: agg_daily_drink_sales
    description: >
      Daily summary of drink (bar) sales aggregated from hourly metrics, including revenue,
      item diversity, customer metrics, and peak hour indicators.
    config:
      tags: ['sales', 'daily', 'drink', 'agg']
    columns:
      - name: order_date
        description: "Date of the sales aggregation."
        tests:
          - not_null
          - unique

      - name: total_drink_items_ordered_all_day
        description: "Total number of drink items sold across all hours of the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: total_daily_drink_revenue
        description: "Total revenue generated from drink (bar) over the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_daily_revenue_per_drink_item
        description: "Average revenue per drink item sold throughout the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: drink_category_diversity_all_day
        description: "Total number of unique drink categories sold during the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: top_daily_drink_category_name
        description: "Top-selling drink category for the entire day."
        tests:
          - accepted_values:
              values: ['Beers & Cider', 'Lo & No Alc', 'Port & Sherry', 'Ultimate Steakhouse Cocktails',
                      'Time & A Place', 'Rarities', 'The Sacred Six', 'Red Wines', 'Champagne & Sparkling',
                      'Rose Wines', 'Dessert Wines', 'White Wines', 'Magnums', 'Bordeaux', 'Burgundy']

      - name: top_daily_drink_category_revenue
        description: "Revenue generated by the top-selling drink category."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_daily_drink_revenue"

      - name: pct_top_drink_cat_from_daily_drink_revenue
        description: "Share of drink revenue from the top category."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: distinct_drink_tables_all_day
        description: "Number of unique tables that placed drinks orders across the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: total_drink_orders_all_day
        description: "Total number of drink orders placed throughout the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_revenue_per_drink_order_all_day
        description: "Average revenue per drink order placed during the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_daily_drink_revenue"

      - name: avg_items_per_drink_order_all_day
        description: "Average number of drink items per order placed during the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 1"
          - dbt_utils.expression_is_true:
              expression: "<= total_drink_items_ordered_all_day"

      - name: total_customers_all_day
        description: "Estimated number of customers, proxied from food mains."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_drink_revenue_per_head_all_day
        description: "Average drinks revenue per customer for the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_daily_drink_revenue"

      - name: avg_drink_items_per_head_all_day
        description: "Average number of drinks per customer across the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_drink_items_ordered_all_day"

      - name: unique_drink_items_ordered_all_day
        description: "Total number of distinct drink items ordered throughout the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: bar_peak_hours
        description: "Comma-separated list of peak drink sales hours based on item volume."
        tests: []

      - name: is_weekend
        description: "True if the order date is a Friday, Saturday, or Sunday."
        tests:
          - accepted_values:
              values: [true, false]
              quote: false

  - name: agg_daily_total_sales
    description: >
      Daily sales aggregates combining food and drink metrics across revenue,
      volume, customer behavior, and top category performance. Includes peak hour summary.
    config:
      tags: ['sales', 'daily', 'kpis', 'combined', 'agg']
    columns:
      - name: order_date
        description: "Date of the aggregated sales."
        tests:
          - not_null
          - unique

      - name: day_of_week
        description: "Numeric day of the week (1 = Sunday, 7 = Saturday)."
        tests:
          - dbt_utils.accepted_range:
              min_value: 1
              max_value: 7

      - name: total_items_ordered_all_day
        description: "Total number of food and drink items sold throughout the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: total_daily_revenue
        description: "Total revenue from both food and drink for the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_revenue_per_item_daily
        description: "Average revenue per item sold (food or drink)."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: pct_food_from_daily_revenue
        description: "Percentage of daily revenue that came from food sales."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
          
      - name: pct_drink_from_daily_revenue
        description: "Percentage of daily revenue that came from drink sales."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: top_daily_category_name
        description: "Top-selling category for the day, whether food or drink."

      - name: top_daily_category_revenue
        description: "Revenue from the top-selling category (food or drink)."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: " <= total_daily_revenue"

      - name: pct_top_cat_of_total_daily_revenue
        description: "Percentage of total daily revenue from the top-selling category."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
          - dbt_utils.expression_is_true:
              expression: " <= 1"

      - name: total_daily_customers
        description: "Estimated number of customers based on mains/steaks/large cuts."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_daily_revenue_per_head
        description: "Average revenue per customer across the full day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: " <= total_daily_revenue"

      - name: avg_items_ordered_per_head_per_day
        description: "Average number of items ordered per customer over the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: " <= total_items_ordered_all_day"

      - name: total_orders_all_day
        description: "Total number of food and drink orders placed during the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_items_per_order_all_day
        description: "Average number of items per order."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: " <= total_items_ordered_all_day"

      - name: avg_revenue_per_order_all_day
        description: "Average revenue per order."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: " <= total_daily_revenue"

      - name: unique_items_ordered_all_day
        description: "Total number of distinct items ordered across food and drink."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: category_diversity_all_day
        description: "Number of unique food and drink categories sold during the day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: distinct_tables_used_all_day
        description: "Total number of distinct tables used across food and drink service."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: is_weekend
        description: "True if the date falls on a weekend (Fri, Sat, Sun)."
        tests:
          - accepted_values:
              values: [true, false]
              quote: false

      - name: peak_hours
        description: "List of hour integers that were marked as peak hours during the day."

      - name: pct_change_in_daily_revenue
        description: "Percentage change in daily revenue compared to previous day."

      - name: daily_revenue_change_amount
        description: "Absolute change in daily revenue from the previous day."

      - name: rolling_avg_revenue_7d
        description: "7-day rolling average of daily revenue."

      - name: rolling_avg_items_sold_7d
        description: "7-day rolling average of items sold per day."



  - name: agg_weekly_food_sales
    description: >
      Weekly aggregate of food (kitchen) sales including total revenue, item and order volumes,
      customer metrics, and category performance.
    config:
      tags: ['agg', 'weekly', 'food']
    columns:
      - name: order_week
        description: "The ISO week label for the aggregated week (format YYYY-WW)."
        tests: [not_null, unique]

      - name: week_start_date
        description: "The first order_date of the week."

      - name: week_end_date
        description: "The last order_date of the week."

      - name: total_food_items_sold_weekly
        description: "Total number of food items sold throughout the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: total_weekly_food_revenue
        description: "Total revenue generated from food orders during the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_weekly_revenue_per_food_item
        description: "Average revenue per food item sold during the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: top_weekly_food_category_name
        description: "Top-selling food category based on weekly revenue."
        tests:
          - accepted_values:
              values: ['Mains', 'Large Cuts', 'Steaks', 'Cheese', 'Sides', 'Sauces', 'Puddings',
                      'Ice-Cream & Sorbet', 'Extras', 'Chocolates', 'Starters']

      - name: top_weekly_food_category_revenue
        description: "Revenue generated by the top food category for the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_weekly_food_revenue"

      - name: pct_top_food_cat_from_weekly_food_revenue
        description: "Percentage of weekly food revenue from the top-selling food category."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: avg_distinct_food_tables_per_day_weekly
        description: "Average number of distinct food-ordering tables per day during the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: total_food_orders_weekly
        description: "Total number of food orders placed throughout the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_revenue_per_food_order_weekly
        description: "Average revenue per food order over the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_weekly_food_revenue"

      - name: avg_items_per_food_order_weekly
        description: "Average number of food items per order during the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_food_items_sold_weekly"

      - name: total_customers_weekly
        description: "Total number of food customers during the week, using mains ordered as proxy."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_food_revenue_per_head_weekly
        description: "Average food revenue per customer during the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_weekly_food_revenue"

      - name: avg_food_items_per_head_weekly
        description: "Average number of food items per customer throughout the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_food_items_sold_weekly"

      - name: food_category_diversity_weekly
        description: "Number of unique food categories sold during the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: unique_food_items_ordered_weekly
        description: "Total number of unique food items sold throughout the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
        
      - name: kitchen_peak_hours_weekly
        description: "Comma-separated list of distinct kitchen peak hours (0–23) observed throughout the week."

  - name: agg_weekly_drink_sales
    description: >
      Weekly aggregate of drink (bar) sales including total revenue, item and order volumes,
      customer metrics, and category performance.
    config:
      tags: ['agg', 'weekly', 'drink']
    columns:
      - name: order_week
        description: "The ISO week label for the aggregated week (format YYYY-WW)."
        tests: [not_null, unique]

      - name: week_start_date
        description: "The first order_date of the week."

      - name: week_end_date
        description: "The last order_date of the week."

      - name: total_drink_items_sold_weekly
        description: "Total number of drink items sold throughout the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: total_weekly_drink_revenue
        description: "Total revenue generated from drink orders during the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_weekly_revenue_per_drink_item
        description: "Average revenue per drink item sold during the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: top_weekly_drink_category_name
        description: "Top-selling drink category based on weekly revenue."
        tests:
          - accepted_values:
              values: ['Beers & Cider', 'Lo & No Alc', 'Port & Sherry', 'Ultimate Steakhouse Cocktails',
                      'Time & A Place', 'Rarities', 'The Sacred Six', 'Red Wines', 'Champagne & Sparkling',
                      'Rose Wines', 'Dessert Wines', 'White Wines', 'Magnums', 'Bordeaux', 'Burgundy']

      - name: top_weekly_drink_category_revenue
        description: "Revenue generated by the top drink category for the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_weekly_drink_revenue"

      - name: pct_top_drink_cat_from_weekly_drink_revenue
        description: "Percentage of weekly drink revenue from the top-selling drink category."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: avg_distinct_drink_tables_per_day_weekly
        description: "Average number of distinct drink-ordering tables per day during the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: total_drink_orders_weekly
        description: "Total number of drink orders placed throughout the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_revenue_per_drink_order_weekly
        description: "Average revenue per drink order over the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_weekly_drink_revenue"

      - name: avg_items_per_drink_order_weekly
        description: "Average number of drink items per order during the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_drink_items_sold_weekly"

      - name: total_customers_weekly
        description: "Total number of drink customers during the week (from food mains as proxy)."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_drink_revenue_per_head_weekly
        description: "Average drink revenue per customer during the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_weekly_drink_revenue"

      - name: avg_drink_items_per_haed_weekly
        description: "Average number of drink items per customer throughout the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_drink_items_sold_weekly"

      - name: drink_category_diversity_weekly
        description: "Number of unique drink categories sold during the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: unique_drink_items_ordered_weekly
        description: "Total number of unique drink items sold throughout the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
        
      - name: bar_peak_hours_weekly
        description: "Comma-separated list of distinct bar peak hours (0–23) observed throughout the week."

  - name: agg_weekly_total_sales
    description: >
      Weekly aggregation of total sales combining food and drink performance, including revenue,
      volume, customer metrics, and top category insights. Tracks week-over-week revenue changes
      and rolling trends.
    config:
      tags: ['agg', 'weekly', 'total']
    columns:
      - name: order_week
        description: "The ISO week label for the aggregation (format YYYY-WW)."
        tests: [not_null, unique]

      - name: week_start_date
        description: "First calendar date of the aggregated week."

      - name: week_end_date
        description: "Last calendar date of the aggregated week."

      - name: total_items_ordered_weekly
        description: "Combined total of food and drink items sold in the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: total_weekly_revenue
        description: "Combined food and drink revenue during the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_revenue_per_item_weekly
        description: "Average revenue per item sold during the week (food + drink)."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: category_diversity_weekly
        description: "Total number of distinct food and drink categories sold during the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: top_weekly_category_name
        description: "Top-selling category by revenue (from food or drink) during the week."

      - name: top_weekly_category_revenue
        description: "Revenue generated by the top-selling category of the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_weekly_revenue"

      - name: pct_food_from_weekly_revenue
        description: "Proportion of total weekly revenue from food."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: pct_drink_from_weekly_revenue
        description: "Proportion of total weekly revenue from drinks."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: pct_top_cat_of_total_weekly_revenue
        description: "Percentage of total revenue from the top-selling category."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: total_weekly_customers
        description: "Estimated number of unique customers during the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_weekly_revenue_per_head
        description: "Average weekly revenue per customer."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_weekly_revenue"

      - name: avg_items_ordered_per_head_weekly
        description: "Average number of items ordered per customer for the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_items_ordered_weekly"

      - name: total_orders_weekly
        description: "Total number of food and drink orders placed during the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_items_per_order_weekly
        description: "Average number of items per order placed in the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_items_ordered_weekly"

      - name: avg_revenue_per_order_weekly
        description: "Average revenue per order (food and drink combined)."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_weekly_revenue"

      - name: unique_items_ordered_weekly
        description: "Total number of unique food and drink items sold during the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_distinct_tables_per_day_weekly
        description: "Average number of distinct tables used per day during the week."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: weekly_revenue_change_amount
        description: "Absolute revenue change compared to the previous week."
        tests: []

      - name: pct_change_in_weekly_revenue
        description: "Percentage change in total revenue compared to the previous week."
        tests: []

      - name: rolling_avg_revenue_4wk
        description: "Rolling 4-week average of total weekly revenue."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
      
      - name: rolling_avg_items_sold_4wk
        description: "4-week rolling average of total items sold."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
      
      - name: peak_hours_weekly
        description: "Comma-separated list of distinct peak hours (0–23) from kitchen and bar across the week."




  - name: agg_monthly_food_sales
    description: >
      Monthly aggregation of kitchen (food) sales metrics, including revenue, volume, customer behavior,
      and category performance derived from daily food aggregates.
    config:
      tags: ['sales', 'monthly', 'agg', 'food']
    columns:
      - name: order_month
        description: "Month of the aggregation in YYYY-MM format."
        tests: [not_null, unique]

      - name: total_food_items_sold_monthly
        description: "Total number of food items sold during the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: total_monthly_food_revenue
        description: "Total revenue generated from food during the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_monthly_revenue_per_food_item
        description: "Average revenue per food item sold during the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_monthly_food_revenue"

      - name: top_monthly_food_category_name
        description: "Top-selling food category during the month."
        tests:
          - accepted_values:
              values: ['Mains', 'Large Cuts', 'Steaks', 'Cheese', 'Sides', 'Sauces', 'Puddings',
                      'Ice-Cream & Sorbet', 'Extras', 'Chocolates', 'Starters']

      - name: top_monthly_food_category_revenue
        description: "Revenue from the top food category during the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_monthly_food_revenue"

      - name: pct_top_food_cat_from_monthly_food_revenue
        description: "Percentage of total food revenue from the top category."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: avg_distinct_food_tables_per_day_monthly
        description: "Average number of unique food tables per day in the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: total_food_orders_monthly
        description: "Total number of food orders placed during the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_revenue_per_food_order_monthly
        description: "Average food revenue per order placed in the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_monthly_food_revenue"

      - name: avg_items_per_food_order_monthly
        description: "Average number of food items per order during the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_food_items_sold_monthly"

      - name: total_customers_monthly
        description: "Estimated number of food customers during the month (via mains ordered)."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_food_revenue_per_head_monthly
        description: "Average food revenue per customer for the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_monthly_food_revenue"

      - name: avg_food_items_per_head_monthly
        description: "Average number of food items per customer during the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_food_items_sold_monthly"

      - name: food_category_diversity_monthly
        description: "Total number of distinct food categories sold during the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: unique_food_items_ordered_monthly
        description: "Number of unique food items sold during the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

  - name: agg_monthly_drink_sales
    description: >
      Monthly aggregate of drink (bar) sales metrics including revenue, item volume,
      top category performance, customer estimates, and diversity indicators.
    config:
      tags: ['sales', 'monthly', 'drink', 'agg']
    columns:
      - name: order_month
        description: "Month of the aggregation in YYYY-MM format."
        tests:
          - not_null
          - unique

      - name: total_drink_items_sold_monthly
        description: "Total number of drink items sold during the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: total_monthly_drink_revenue
        description: "Total revenue from drink sales during the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_monthly_revenue_per_drink_item
        description: "Average revenue per drink item sold."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_monthly_drink_revenue"

      - name: top_monthly_drink_category_name
        description: "Top-selling drink category over the month."
        tests:
          - accepted_values:
              values: ['Beers & Cider', 'Lo & No Alc', 'Port & Sherry', 'Ultimate Steakhouse Cocktails',
                      'Time & A Place', 'Rarities', 'The Sacred Six', 'Red Wines', 'Champagne & Sparkling',
                      'Rose Wines', 'Dessert Wines', 'White Wines', 'Magnums', 'Bordeaux', 'Burgundy']

      - name: top_monthly_drink_category_revenue
        description: "Revenue generated by the top-selling drink category."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_monthly_drink_revenue"

      - name: pct_top_drink_cat_from_monthly_drinks_revenue
        description: "Percentage of drink revenue from the top category."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: avg_distinct_drink_tables_per_day_monthly
        description: "Average number of distinct drink tables used per day in the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: total_drink_orders_monthly
        description: "Total number of drink orders placed in the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_revenue_per_drinks_order_monthly
        description: "Average revenue per drink order."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_monthly_drink_revenue"

      - name: avg_items_per_drinks_order_monthly
        description: "Average number of drink items per order."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 1"
          - dbt_utils.expression_is_true:
              expression: "<= total_drink_items_sold_monthly"

      - name: total_customers_monthly
        description: "Estimated number of unique customers based on food proxy."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_drinks_revenue_per_head_monthly
        description: "Average drink spend per estimated customer."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_monthly_drink_revenue"

      - name: avg_drink_items_per_head_monthly
        description: "Average number of drink items per customer."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_drink_items_sold_monthly"

      - name: drink_category_diversity_monthly
        description: "Number of distinct drink categories sold over the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: unique_drink_items_ordered_monthly
        description: "Total number of unique drink items sold during the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

  - name: agg_monthly_total_sales
    description: >
      Monthly aggregation combining food and drink metrics. Tracks revenue, volume,
      top category, customer behavior, order patterns, and temporal trends.
    config:
      tags: ['sales', 'monthly', 'agg', 'total']
    columns:
      - name: order_month
        description: "Month of the aggregation (YYYY-MM)."
        tests:
          - not_null
          - unique

      - name: total_items_ordered_monthly
        description: "Total number of food and drink items sold during the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: total_monthly_revenue
        description: "Total revenue from food and drink combined during the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_revenue_per_item_monthly
        description: "Average revenue per item sold (food + drink)."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_monthly_revenue"

      - name: category_diversity_monthly
        description: "Number of unique food and drink categories sold during the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: top_monthly_category_name
        description: "Top-selling category (food or drink) by revenue during the month."

      - name: top_monthly_category_revenue
        description: "Revenue from the top-selling category."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_monthly_revenue"

      - name: pct_food_from_monthly_revenue
        description: "Share of total revenue that came from food."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: pct_drink_from_monthly_revenue
        description: "Share of total revenue that came from drinks."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: pct_top_cat_of_total_monthly_revenue
        description: "Share of revenue from the top-selling category."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: total_monthly_customers
        description: "Estimated number of unique customers (based on mains)."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_monthly_revenue_per_head
        description: "Average revenue per customer for the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_monthly_revenue"

      - name: avg_items_ordered_per_head_monthly
        description: "Average number of items per customer for the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_items_ordered_monthly"

      - name: total_orders_monthly
        description: "Total number of orders (food and drink) during the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_items_per_order_monthly
        description: "Average number of items per order."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 1"
          - dbt_utils.expression_is_true:
              expression: "<= total_items_ordered_monthly"

      - name: avg_revenue_per_order_monthly
        description: "Average revenue per order."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"
          - dbt_utils.expression_is_true:
              expression: "<= total_monthly_revenue"

      - name: unique_items_ordered_monthly
        description: "Number of unique food and drink items sold during the month."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: avg_distinct_tables_per_day_monthly
        description: "Average number of distinct tables used per day."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: monthly_revenue_change_amount
        description: "Change in total revenue compared to the previous month."
        tests: []

      - name: pct_change_in_monthly_revenue
        description: "Percentage change in revenue from the previous month."
        tests: []

      - name: rolling_avg_revenue_3mo
        description: "Three-month rolling average of monthly revenue."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: rolling_avg_items_sold_3mo
        description: "Three-month rolling average of items sold."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: weekend_days_in_month
        description: "Count of weekend days in the month (with orders)."
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: peak_hours_monthly
        description: "Comma-separated list of distinct peak hours observed during the month."

